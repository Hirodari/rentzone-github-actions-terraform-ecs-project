create repo: rentzone-github-actions-terraform-ecs-project
clone the repo
download the zip folder: iac and unzip it
copy iac folder => rentzone-github-actions-terraform-ecs-project
create an s3 bucket: mitsindo-terraform-remote-state => enable versioning
create dynamodb table: terraform-state-lock => LockID
set up secret manager on the console
register a domain name 
update the backend.tf with value
update terraform.tfvars
generate github tokens: clone-repository => check repo
create github repository secrets
    settings -> secrets and variables -> actions -> new repo secret 
    AWS_ACCESS_KEY_ID: AKIA3DRWTYPDKFG2DEAE
    AWS_SECRET_ACCESS_KEY: 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
    ECR_REGISTRY: 763544978374.dkr.ecr.us-east-1.amazonaws.com
    PERSONAL_ACCESS_TOKEN: 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
    RDS_DB_NAME: applicationdb
    RDS_DB_PASSWORD: admin123
    RDS_DB_USERNAME:admin
create workflow file
    pre-requisites: it needs to be a yaml file stored in your repo => .github/workflows
    filename: deploy_pipeline.yml 
    this file will have all configs and instructions to create a deployment Pipeline
    1. instruct on push to trigger the pipeline, code:
        on:
            push:
                branches: [main]
    2. set up env:
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: us-east-1
            TERRAFORM_ACTION: destroy
    3. create jobs, the job will have 3 tasks: configure_aws_credentials, deploy_aws_infrastructure and create_ecr_repository